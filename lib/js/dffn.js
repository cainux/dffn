// Generated by CoffeeScript 1.4.0
(function() {
  var Dffn, Hero, Item, ItemGroup, Skill, SkillBuild, dffn, util;

  util = (function() {

    function util() {}

    util.cleanUp = function() {
      $("#__dffn_styles, #__dffn_container").remove();
      return $("#wrap").show();
    };

    util.addStyles = function() {
      return $("HEAD").append("<link id='__dffn_styles' rel='stylesheet' type='text/css' href='http://localhost/dffn/lib/css/dffn.min.css?v=1_2'>");
    };

    util.titleCase = function(str) {
      return str.replace(/\w\S*/g, function(txt) {
        return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();
      });
    };

    return util;

  })();

  Item = (function() {

    function Item(name, src) {
      this.name = name;
      this.src = src;
    }

    return Item;

  })();

  ItemGroup = (function() {

    function ItemGroup(name, $items) {
      var item, src;
      this.name = name;
      this.items = (function() {
        var _i, _len, _results;
        _results = [];
        for (_i = 0, _len = $items.length; _i < _len; _i++) {
          item = $items[_i];
          name = util.titleCase(item.src.replace(/^.+?\/item\//i, "").replace(/\.png$/i, "").replace(/-/g, " "));
          src = item.src;
          _results.push(new Item(name, src));
        }
        return _results;
      })();
    }

    return ItemGroup;

  })();

  Skill = (function() {

    function Skill(name, level, key, skillImg) {
      this.name = name;
      this.level = level;
      this.key = key;
      this.skillImg = skillImg;
    }

    return Skill;

  })();

  SkillBuild = (function() {

    function SkillBuild($skills) {
      var $sk, key, keyImage, level, name, skill, skillImage;
      this.skills = (function() {
        var _i, _len, _results;
        _results = [];
        for (_i = 0, _len = $skills.length; _i < _len; _i++) {
          skill = $skills[_i];
          $sk = $(skill);
          keyImage = $sk.parents("TR").children("TD:last").children("IMG");
          skillImage = $sk.parents("TR").children("TD:first").children("IMG");
          name = $sk.parents("DIV.ajax-tooltip").children("H4").text();
          level = parseInt($sk.text());
          if (name === '') {
            name = "Stats";
          }
          key = "";
          if (keyImage.length > 0) {
            key = keyImage[0].src.replace(/^.+?key-|\.png$/g, "").toUpperCase();
          }
          _results.push(new Skill(name, level, key, skillImage.attr('src')));
        }
        return _results;
      })();
      this.skills.sort(function(a, b) {
        if (a.level >= b.level) {
          return 1;
        } else {
          return -1;
        }
      });
    }

    return SkillBuild;

  })();

  Hero = (function() {

    function Hero(name, url) {
      this.name = name;
      this.url = url;
    }

    return Hero;

  })();

  Dffn = (function() {
    var addBuild;

    function Dffn() {}

    Dffn.prototype.noobify = function() {
      var $dffnContainer, buildName, title;
      util.cleanUp();
      util.addStyles();
      title = $("TITLE").text();
      buildName = $(".build-tab:visible H2").text();
      $dffnContainer = $("      <div id='__dffn_container'>        <a class='__dffn_close'>close</a>        <h1>" + title + "</h1>        <h2>" + buildName + "</h2>        <div id='__dffn_itemgroups'></div>        <div id='__dffn_skills'></div>      </div>    ");
      addBuild($dffnContainer);
      $("BODY").prepend($dffnContainer);
      return $("#wrap").hide();
    };

    addBuild = function($container) {
      var $ig, $itemGroups, $skills, item, itemGroup, itemGroups, key, skill, skillBuild, skillsTemplate, template, _i, _j, _k, _len, _len1, _len2, _ref, _ref1;
      itemGroups = (function() {
        var _i, _len, _ref, _results;
        _ref = $("DIV.build-tab:visible DIV.items>H4").parent();
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          $ig = _ref[_i];
          _results.push(new ItemGroup($("H4", $ig).text(), $("IMG", $ig)));
        }
        return _results;
      })();
      skillBuild = new SkillBuild($("DIV.build-tab:visible DIV.skill-box TD.selected.c"));
      $itemGroups = $("#__dffn_itemgroups", $container);
      $skills = $("#__dffn_skills", $container);
      for (_i = 0, _len = itemGroups.length; _i < _len; _i++) {
        itemGroup = itemGroups[_i];
        template = [];
        template.push("<div class='__dffn_itemgroup'><h4>" + itemGroup.name + "</h4><ul>");
        _ref = itemGroup.items;
        for (_j = 0, _len1 = _ref.length; _j < _len1; _j++) {
          item = _ref[_j];
          template.push("<li><img src='" + item.src + "' /> " + item.name + "</li>");
        }
        template.push("</ul></div>");
        $itemGroups.append(template.join(""));
      }
      skillsTemplate = [];
      skillsTemplate.push("<h4>Hero Skills</h4>");
      skillsTemplate.push("<ul>");
      _ref1 = skillBuild.skills;
      for (_k = 0, _len2 = _ref1.length; _k < _len2; _k++) {
        skill = _ref1[_k];
        key = "";
        if (skill.key.length > 0) {
          key = "<span class='__dffn_key'>(" + skill.key + "</span>)";
        }
        skillsTemplate.push("<li><span class='__dffn_level'>" + skill.level + "</span> <img src='" + skill.skillImg + "'/> " + key + " " + skill.name + "</li>");
      }
      skillsTemplate.push("</ul>");
      return $skills.append(skillsTemplate.join(""));
    };

    return Dffn;

  })();

  if (!(window.dffn != null)) {
    $("BODY").on("click", ".__dffn_close", function(evt) {
      evt.preventDefault();
      return util.cleanUp();
    });
    dffn = new Dffn();
    dffn.noobify();
    window.dffn = dffn;
  }

}).call(this);
